/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `WHOGrowthStandard` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/library';
import type * as $Enums from '../enums';
import type * as Prisma from '../internal/prismaNamespace';

/**
 * Model WHOGrowthStandard
 *
 */
export type WHOGrowthStandardModel = runtime.Types.Result.DefaultSelection<Prisma.$WHOGrowthStandardPayload>;

export type AggregateWHOGrowthStandard = {
    _count: WHOGrowthStandardCountAggregateOutputType | null;
    _avg: WHOGrowthStandardAvgAggregateOutputType | null;
    _sum: WHOGrowthStandardSumAggregateOutputType | null;
    _min: WHOGrowthStandardMinAggregateOutputType | null;
    _max: WHOGrowthStandardMaxAggregateOutputType | null;
};

export type WHOGrowthStandardAvgAggregateOutputType = {
    id: number | null;
    ageInMonths: number | null;
    lValue: number | null;
    mValue: number | null;
    sValue: number | null;
    sd0: number | null;
    sd1neg: number | null;
    sd1pos: number | null;
    sd2neg: number | null;
    sd2pos: number | null;
    sd3neg: number | null;
    sd3pos: number | null;
    sd4neg: number | null;
    sd4pos: number | null;
};

export type WHOGrowthStandardSumAggregateOutputType = {
    id: number | null;
    ageInMonths: number | null;
    lValue: number | null;
    mValue: number | null;
    sValue: number | null;
    sd0: number | null;
    sd1neg: number | null;
    sd1pos: number | null;
    sd2neg: number | null;
    sd2pos: number | null;
    sd3neg: number | null;
    sd3pos: number | null;
    sd4neg: number | null;
    sd4pos: number | null;
};

export type WHOGrowthStandardMinAggregateOutputType = {
    id: number | null;
    ageInMonths: number | null;
    gender: $Enums.Gender | null;
    measurementType: $Enums.MeasurementType | null;
    lValue: number | null;
    mValue: number | null;
    sValue: number | null;
    sd0: number | null;
    sd1neg: number | null;
    sd1pos: number | null;
    sd2neg: number | null;
    sd2pos: number | null;
    sd3neg: number | null;
    sd3pos: number | null;
    sd4neg: number | null;
    sd4pos: number | null;
    createdAt: Date | null;
    updatedAt: Date | null;
};

export type WHOGrowthStandardMaxAggregateOutputType = {
    id: number | null;
    ageInMonths: number | null;
    gender: $Enums.Gender | null;
    measurementType: $Enums.MeasurementType | null;
    lValue: number | null;
    mValue: number | null;
    sValue: number | null;
    sd0: number | null;
    sd1neg: number | null;
    sd1pos: number | null;
    sd2neg: number | null;
    sd2pos: number | null;
    sd3neg: number | null;
    sd3pos: number | null;
    sd4neg: number | null;
    sd4pos: number | null;
    createdAt: Date | null;
    updatedAt: Date | null;
};

export type WHOGrowthStandardCountAggregateOutputType = {
    id: number;
    ageInMonths: number;
    gender: number;
    measurementType: number;
    lValue: number;
    mValue: number;
    sValue: number;
    sd0: number;
    sd1neg: number;
    sd1pos: number;
    sd2neg: number;
    sd2pos: number;
    sd3neg: number;
    sd3pos: number;
    sd4neg: number;
    sd4pos: number;
    createdAt: number;
    updatedAt: number;
    _all: number;
};

export type WHOGrowthStandardAvgAggregateInputType = {
    id?: true;
    ageInMonths?: true;
    lValue?: true;
    mValue?: true;
    sValue?: true;
    sd0?: true;
    sd1neg?: true;
    sd1pos?: true;
    sd2neg?: true;
    sd2pos?: true;
    sd3neg?: true;
    sd3pos?: true;
    sd4neg?: true;
    sd4pos?: true;
};

export type WHOGrowthStandardSumAggregateInputType = {
    id?: true;
    ageInMonths?: true;
    lValue?: true;
    mValue?: true;
    sValue?: true;
    sd0?: true;
    sd1neg?: true;
    sd1pos?: true;
    sd2neg?: true;
    sd2pos?: true;
    sd3neg?: true;
    sd3pos?: true;
    sd4neg?: true;
    sd4pos?: true;
};

export type WHOGrowthStandardMinAggregateInputType = {
    id?: true;
    ageInMonths?: true;
    gender?: true;
    measurementType?: true;
    lValue?: true;
    mValue?: true;
    sValue?: true;
    sd0?: true;
    sd1neg?: true;
    sd1pos?: true;
    sd2neg?: true;
    sd2pos?: true;
    sd3neg?: true;
    sd3pos?: true;
    sd4neg?: true;
    sd4pos?: true;
    createdAt?: true;
    updatedAt?: true;
};

export type WHOGrowthStandardMaxAggregateInputType = {
    id?: true;
    ageInMonths?: true;
    gender?: true;
    measurementType?: true;
    lValue?: true;
    mValue?: true;
    sValue?: true;
    sd0?: true;
    sd1neg?: true;
    sd1pos?: true;
    sd2neg?: true;
    sd2pos?: true;
    sd3neg?: true;
    sd3pos?: true;
    sd4neg?: true;
    sd4pos?: true;
    createdAt?: true;
    updatedAt?: true;
};

export type WHOGrowthStandardCountAggregateInputType = {
    id?: true;
    ageInMonths?: true;
    gender?: true;
    measurementType?: true;
    lValue?: true;
    mValue?: true;
    sValue?: true;
    sd0?: true;
    sd1neg?: true;
    sd1pos?: true;
    sd2neg?: true;
    sd2pos?: true;
    sd3neg?: true;
    sd3pos?: true;
    sd4neg?: true;
    sd4pos?: true;
    createdAt?: true;
    updatedAt?: true;
    _all?: true;
};

export type WHOGrowthStandardAggregateArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Filter which WHOGrowthStandard to aggregate.
     */
    where?: Prisma.WHOGrowthStandardWhereInput;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     *
     * Determine the order of WHOGrowthStandards to fetch.
     */
    orderBy?: Prisma.WHOGrowthStandardOrderByWithRelationInput | Prisma.WHOGrowthStandardOrderByWithRelationInput[];
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     *
     * Sets the start position
     */
    cursor?: Prisma.WHOGrowthStandardWhereUniqueInput;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     *
     * Take `Â±n` WHOGrowthStandards from the position of the cursor.
     */
    take?: number;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     *
     * Skip the first `n` WHOGrowthStandards.
     */
    skip?: number;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     *
     * Count returned WHOGrowthStandards
     **/
    _count?: true | WHOGrowthStandardCountAggregateInputType;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     *
     * Select which fields to average
     **/
    _avg?: WHOGrowthStandardAvgAggregateInputType;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     *
     * Select which fields to sum
     **/
    _sum?: WHOGrowthStandardSumAggregateInputType;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     *
     * Select which fields to find the minimum value
     **/
    _min?: WHOGrowthStandardMinAggregateInputType;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     *
     * Select which fields to find the maximum value
     **/
    _max?: WHOGrowthStandardMaxAggregateInputType;
};

export type GetWHOGrowthStandardAggregateType<T extends WHOGrowthStandardAggregateArgs> = {
    [P in keyof T & keyof AggregateWHOGrowthStandard]: P extends '_count' | 'count'
        ? T[P] extends true
            ? number
            : Prisma.GetScalarType<T[P], AggregateWHOGrowthStandard[P]>
        : Prisma.GetScalarType<T[P], AggregateWHOGrowthStandard[P]>;
};

export type WHOGrowthStandardGroupByArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    where?: Prisma.WHOGrowthStandardWhereInput;
    orderBy?:
        | Prisma.WHOGrowthStandardOrderByWithAggregationInput
        | Prisma.WHOGrowthStandardOrderByWithAggregationInput[];
    by: Prisma.WHOGrowthStandardScalarFieldEnum[] | Prisma.WHOGrowthStandardScalarFieldEnum;
    having?: Prisma.WHOGrowthStandardScalarWhereWithAggregatesInput;
    take?: number;
    skip?: number;
    _count?: WHOGrowthStandardCountAggregateInputType | true;
    _avg?: WHOGrowthStandardAvgAggregateInputType;
    _sum?: WHOGrowthStandardSumAggregateInputType;
    _min?: WHOGrowthStandardMinAggregateInputType;
    _max?: WHOGrowthStandardMaxAggregateInputType;
};

export type WHOGrowthStandardGroupByOutputType = {
    id: number;
    ageInMonths: number;
    gender: $Enums.Gender;
    measurementType: $Enums.MeasurementType;
    lValue: number;
    mValue: number;
    sValue: number;
    sd0: number;
    sd1neg: number;
    sd1pos: number;
    sd2neg: number;
    sd2pos: number;
    sd3neg: number;
    sd3pos: number;
    sd4neg: number | null;
    sd4pos: number | null;
    createdAt: Date;
    updatedAt: Date;
    _count: WHOGrowthStandardCountAggregateOutputType | null;
    _avg: WHOGrowthStandardAvgAggregateOutputType | null;
    _sum: WHOGrowthStandardSumAggregateOutputType | null;
    _min: WHOGrowthStandardMinAggregateOutputType | null;
    _max: WHOGrowthStandardMaxAggregateOutputType | null;
};

type GetWHOGrowthStandardGroupByPayload<T extends WHOGrowthStandardGroupByArgs> = Prisma.PrismaPromise<
    Array<
        Prisma.PickEnumerable<WHOGrowthStandardGroupByOutputType, T['by']> & {
            [P in keyof T & keyof WHOGrowthStandardGroupByOutputType]: P extends '_count'
                ? T[P] extends boolean
                    ? number
                    : Prisma.GetScalarType<T[P], WHOGrowthStandardGroupByOutputType[P]>
                : Prisma.GetScalarType<T[P], WHOGrowthStandardGroupByOutputType[P]>;
        }
    >
>;

export type WHOGrowthStandardWhereInput = {
    AND?: Prisma.WHOGrowthStandardWhereInput | Prisma.WHOGrowthStandardWhereInput[];
    OR?: Prisma.WHOGrowthStandardWhereInput[];
    NOT?: Prisma.WHOGrowthStandardWhereInput | Prisma.WHOGrowthStandardWhereInput[];
    id?: Prisma.IntFilter<'WHOGrowthStandard'> | number;
    ageInMonths?: Prisma.IntFilter<'WHOGrowthStandard'> | number;
    gender?: Prisma.EnumGenderFilter<'WHOGrowthStandard'> | $Enums.Gender;
    measurementType?: Prisma.EnumMeasurementTypeFilter<'WHOGrowthStandard'> | $Enums.MeasurementType;
    lValue?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
    mValue?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
    sValue?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
    sd0?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
    sd1neg?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
    sd1pos?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
    sd2neg?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
    sd2pos?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
    sd3neg?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
    sd3pos?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
    sd4neg?: Prisma.FloatNullableFilter<'WHOGrowthStandard'> | number | null;
    sd4pos?: Prisma.FloatNullableFilter<'WHOGrowthStandard'> | number | null;
    createdAt?: Prisma.DateTimeFilter<'WHOGrowthStandard'> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<'WHOGrowthStandard'> | Date | string;
};

export type WHOGrowthStandardOrderByWithRelationInput = {
    id?: Prisma.SortOrder;
    ageInMonths?: Prisma.SortOrder;
    gender?: Prisma.SortOrder;
    measurementType?: Prisma.SortOrder;
    lValue?: Prisma.SortOrder;
    mValue?: Prisma.SortOrder;
    sValue?: Prisma.SortOrder;
    sd0?: Prisma.SortOrder;
    sd1neg?: Prisma.SortOrder;
    sd1pos?: Prisma.SortOrder;
    sd2neg?: Prisma.SortOrder;
    sd2pos?: Prisma.SortOrder;
    sd3neg?: Prisma.SortOrder;
    sd3pos?: Prisma.SortOrder;
    sd4neg?: Prisma.SortOrderInput | Prisma.SortOrder;
    sd4pos?: Prisma.SortOrderInput | Prisma.SortOrder;
    createdAt?: Prisma.SortOrder;
    updatedAt?: Prisma.SortOrder;
};

export type WHOGrowthStandardWhereUniqueInput = Prisma.AtLeast<
    {
        id?: number;
        AND?: Prisma.WHOGrowthStandardWhereInput | Prisma.WHOGrowthStandardWhereInput[];
        OR?: Prisma.WHOGrowthStandardWhereInput[];
        NOT?: Prisma.WHOGrowthStandardWhereInput | Prisma.WHOGrowthStandardWhereInput[];
        ageInMonths?: Prisma.IntFilter<'WHOGrowthStandard'> | number;
        gender?: Prisma.EnumGenderFilter<'WHOGrowthStandard'> | $Enums.Gender;
        measurementType?: Prisma.EnumMeasurementTypeFilter<'WHOGrowthStandard'> | $Enums.MeasurementType;
        lValue?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
        mValue?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
        sValue?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
        sd0?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
        sd1neg?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
        sd1pos?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
        sd2neg?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
        sd2pos?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
        sd3neg?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
        sd3pos?: Prisma.FloatFilter<'WHOGrowthStandard'> | number;
        sd4neg?: Prisma.FloatNullableFilter<'WHOGrowthStandard'> | number | null;
        sd4pos?: Prisma.FloatNullableFilter<'WHOGrowthStandard'> | number | null;
        createdAt?: Prisma.DateTimeFilter<'WHOGrowthStandard'> | Date | string;
        updatedAt?: Prisma.DateTimeFilter<'WHOGrowthStandard'> | Date | string;
    },
    'id'
>;

export type WHOGrowthStandardOrderByWithAggregationInput = {
    id?: Prisma.SortOrder;
    ageInMonths?: Prisma.SortOrder;
    gender?: Prisma.SortOrder;
    measurementType?: Prisma.SortOrder;
    lValue?: Prisma.SortOrder;
    mValue?: Prisma.SortOrder;
    sValue?: Prisma.SortOrder;
    sd0?: Prisma.SortOrder;
    sd1neg?: Prisma.SortOrder;
    sd1pos?: Prisma.SortOrder;
    sd2neg?: Prisma.SortOrder;
    sd2pos?: Prisma.SortOrder;
    sd3neg?: Prisma.SortOrder;
    sd3pos?: Prisma.SortOrder;
    sd4neg?: Prisma.SortOrderInput | Prisma.SortOrder;
    sd4pos?: Prisma.SortOrderInput | Prisma.SortOrder;
    createdAt?: Prisma.SortOrder;
    updatedAt?: Prisma.SortOrder;
    _count?: Prisma.WHOGrowthStandardCountOrderByAggregateInput;
    _avg?: Prisma.WHOGrowthStandardAvgOrderByAggregateInput;
    _max?: Prisma.WHOGrowthStandardMaxOrderByAggregateInput;
    _min?: Prisma.WHOGrowthStandardMinOrderByAggregateInput;
    _sum?: Prisma.WHOGrowthStandardSumOrderByAggregateInput;
};

export type WHOGrowthStandardScalarWhereWithAggregatesInput = {
    AND?:
        | Prisma.WHOGrowthStandardScalarWhereWithAggregatesInput
        | Prisma.WHOGrowthStandardScalarWhereWithAggregatesInput[];
    OR?: Prisma.WHOGrowthStandardScalarWhereWithAggregatesInput[];
    NOT?:
        | Prisma.WHOGrowthStandardScalarWhereWithAggregatesInput
        | Prisma.WHOGrowthStandardScalarWhereWithAggregatesInput[];
    id?: Prisma.IntWithAggregatesFilter<'WHOGrowthStandard'> | number;
    ageInMonths?: Prisma.IntWithAggregatesFilter<'WHOGrowthStandard'> | number;
    gender?: Prisma.EnumGenderWithAggregatesFilter<'WHOGrowthStandard'> | $Enums.Gender;
    measurementType?: Prisma.EnumMeasurementTypeWithAggregatesFilter<'WHOGrowthStandard'> | $Enums.MeasurementType;
    lValue?: Prisma.FloatWithAggregatesFilter<'WHOGrowthStandard'> | number;
    mValue?: Prisma.FloatWithAggregatesFilter<'WHOGrowthStandard'> | number;
    sValue?: Prisma.FloatWithAggregatesFilter<'WHOGrowthStandard'> | number;
    sd0?: Prisma.FloatWithAggregatesFilter<'WHOGrowthStandard'> | number;
    sd1neg?: Prisma.FloatWithAggregatesFilter<'WHOGrowthStandard'> | number;
    sd1pos?: Prisma.FloatWithAggregatesFilter<'WHOGrowthStandard'> | number;
    sd2neg?: Prisma.FloatWithAggregatesFilter<'WHOGrowthStandard'> | number;
    sd2pos?: Prisma.FloatWithAggregatesFilter<'WHOGrowthStandard'> | number;
    sd3neg?: Prisma.FloatWithAggregatesFilter<'WHOGrowthStandard'> | number;
    sd3pos?: Prisma.FloatWithAggregatesFilter<'WHOGrowthStandard'> | number;
    sd4neg?: Prisma.FloatNullableWithAggregatesFilter<'WHOGrowthStandard'> | number | null;
    sd4pos?: Prisma.FloatNullableWithAggregatesFilter<'WHOGrowthStandard'> | number | null;
    createdAt?: Prisma.DateTimeWithAggregatesFilter<'WHOGrowthStandard'> | Date | string;
    updatedAt?: Prisma.DateTimeWithAggregatesFilter<'WHOGrowthStandard'> | Date | string;
};

export type WHOGrowthStandardCreateInput = {
    ageInMonths: number;
    gender: $Enums.Gender;
    measurementType: $Enums.MeasurementType;
    lValue: number;
    mValue: number;
    sValue: number;
    sd0: number;
    sd1neg: number;
    sd1pos: number;
    sd2neg: number;
    sd2pos: number;
    sd3neg: number;
    sd3pos: number;
    sd4neg?: number | null;
    sd4pos?: number | null;
    createdAt?: Date | string;
    updatedAt?: Date | string;
};

export type WHOGrowthStandardUncheckedCreateInput = {
    id?: number;
    ageInMonths: number;
    gender: $Enums.Gender;
    measurementType: $Enums.MeasurementType;
    lValue: number;
    mValue: number;
    sValue: number;
    sd0: number;
    sd1neg: number;
    sd1pos: number;
    sd2neg: number;
    sd2pos: number;
    sd3neg: number;
    sd3pos: number;
    sd4neg?: number | null;
    sd4pos?: number | null;
    createdAt?: Date | string;
    updatedAt?: Date | string;
};

export type WHOGrowthStandardUpdateInput = {
    ageInMonths?: Prisma.IntFieldUpdateOperationsInput | number;
    gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
    measurementType?: Prisma.EnumMeasurementTypeFieldUpdateOperationsInput | $Enums.MeasurementType;
    lValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    mValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    sValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd0?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd1neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd1pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd2neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd2pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd3neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd3pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd4neg?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
    sd4pos?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WHOGrowthStandardUncheckedUpdateInput = {
    id?: Prisma.IntFieldUpdateOperationsInput | number;
    ageInMonths?: Prisma.IntFieldUpdateOperationsInput | number;
    gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
    measurementType?: Prisma.EnumMeasurementTypeFieldUpdateOperationsInput | $Enums.MeasurementType;
    lValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    mValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    sValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd0?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd1neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd1pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd2neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd2pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd3neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd3pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd4neg?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
    sd4pos?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WHOGrowthStandardCreateManyInput = {
    id?: number;
    ageInMonths: number;
    gender: $Enums.Gender;
    measurementType: $Enums.MeasurementType;
    lValue: number;
    mValue: number;
    sValue: number;
    sd0: number;
    sd1neg: number;
    sd1pos: number;
    sd2neg: number;
    sd2pos: number;
    sd3neg: number;
    sd3pos: number;
    sd4neg?: number | null;
    sd4pos?: number | null;
    createdAt?: Date | string;
    updatedAt?: Date | string;
};

export type WHOGrowthStandardUpdateManyMutationInput = {
    ageInMonths?: Prisma.IntFieldUpdateOperationsInput | number;
    gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
    measurementType?: Prisma.EnumMeasurementTypeFieldUpdateOperationsInput | $Enums.MeasurementType;
    lValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    mValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    sValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd0?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd1neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd1pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd2neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd2pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd3neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd3pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd4neg?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
    sd4pos?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WHOGrowthStandardUncheckedUpdateManyInput = {
    id?: Prisma.IntFieldUpdateOperationsInput | number;
    ageInMonths?: Prisma.IntFieldUpdateOperationsInput | number;
    gender?: Prisma.EnumGenderFieldUpdateOperationsInput | $Enums.Gender;
    measurementType?: Prisma.EnumMeasurementTypeFieldUpdateOperationsInput | $Enums.MeasurementType;
    lValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    mValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    sValue?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd0?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd1neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd1pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd2neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd2pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd3neg?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd3pos?: Prisma.FloatFieldUpdateOperationsInput | number;
    sd4neg?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
    sd4pos?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null;
    createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
    updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type WHOGrowthStandardCountOrderByAggregateInput = {
    id?: Prisma.SortOrder;
    ageInMonths?: Prisma.SortOrder;
    gender?: Prisma.SortOrder;
    measurementType?: Prisma.SortOrder;
    lValue?: Prisma.SortOrder;
    mValue?: Prisma.SortOrder;
    sValue?: Prisma.SortOrder;
    sd0?: Prisma.SortOrder;
    sd1neg?: Prisma.SortOrder;
    sd1pos?: Prisma.SortOrder;
    sd2neg?: Prisma.SortOrder;
    sd2pos?: Prisma.SortOrder;
    sd3neg?: Prisma.SortOrder;
    sd3pos?: Prisma.SortOrder;
    sd4neg?: Prisma.SortOrder;
    sd4pos?: Prisma.SortOrder;
    createdAt?: Prisma.SortOrder;
    updatedAt?: Prisma.SortOrder;
};

export type WHOGrowthStandardAvgOrderByAggregateInput = {
    id?: Prisma.SortOrder;
    ageInMonths?: Prisma.SortOrder;
    lValue?: Prisma.SortOrder;
    mValue?: Prisma.SortOrder;
    sValue?: Prisma.SortOrder;
    sd0?: Prisma.SortOrder;
    sd1neg?: Prisma.SortOrder;
    sd1pos?: Prisma.SortOrder;
    sd2neg?: Prisma.SortOrder;
    sd2pos?: Prisma.SortOrder;
    sd3neg?: Prisma.SortOrder;
    sd3pos?: Prisma.SortOrder;
    sd4neg?: Prisma.SortOrder;
    sd4pos?: Prisma.SortOrder;
};

export type WHOGrowthStandardMaxOrderByAggregateInput = {
    id?: Prisma.SortOrder;
    ageInMonths?: Prisma.SortOrder;
    gender?: Prisma.SortOrder;
    measurementType?: Prisma.SortOrder;
    lValue?: Prisma.SortOrder;
    mValue?: Prisma.SortOrder;
    sValue?: Prisma.SortOrder;
    sd0?: Prisma.SortOrder;
    sd1neg?: Prisma.SortOrder;
    sd1pos?: Prisma.SortOrder;
    sd2neg?: Prisma.SortOrder;
    sd2pos?: Prisma.SortOrder;
    sd3neg?: Prisma.SortOrder;
    sd3pos?: Prisma.SortOrder;
    sd4neg?: Prisma.SortOrder;
    sd4pos?: Prisma.SortOrder;
    createdAt?: Prisma.SortOrder;
    updatedAt?: Prisma.SortOrder;
};

export type WHOGrowthStandardMinOrderByAggregateInput = {
    id?: Prisma.SortOrder;
    ageInMonths?: Prisma.SortOrder;
    gender?: Prisma.SortOrder;
    measurementType?: Prisma.SortOrder;
    lValue?: Prisma.SortOrder;
    mValue?: Prisma.SortOrder;
    sValue?: Prisma.SortOrder;
    sd0?: Prisma.SortOrder;
    sd1neg?: Prisma.SortOrder;
    sd1pos?: Prisma.SortOrder;
    sd2neg?: Prisma.SortOrder;
    sd2pos?: Prisma.SortOrder;
    sd3neg?: Prisma.SortOrder;
    sd3pos?: Prisma.SortOrder;
    sd4neg?: Prisma.SortOrder;
    sd4pos?: Prisma.SortOrder;
    createdAt?: Prisma.SortOrder;
    updatedAt?: Prisma.SortOrder;
};

export type WHOGrowthStandardSumOrderByAggregateInput = {
    id?: Prisma.SortOrder;
    ageInMonths?: Prisma.SortOrder;
    lValue?: Prisma.SortOrder;
    mValue?: Prisma.SortOrder;
    sValue?: Prisma.SortOrder;
    sd0?: Prisma.SortOrder;
    sd1neg?: Prisma.SortOrder;
    sd1pos?: Prisma.SortOrder;
    sd2neg?: Prisma.SortOrder;
    sd2pos?: Prisma.SortOrder;
    sd3neg?: Prisma.SortOrder;
    sd3pos?: Prisma.SortOrder;
    sd4neg?: Prisma.SortOrder;
    sd4pos?: Prisma.SortOrder;
};

export type EnumMeasurementTypeFieldUpdateOperationsInput = {
    set?: $Enums.MeasurementType;
};

export type WHOGrowthStandardSelect<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
    {
        id?: boolean;
        ageInMonths?: boolean;
        gender?: boolean;
        measurementType?: boolean;
        lValue?: boolean;
        mValue?: boolean;
        sValue?: boolean;
        sd0?: boolean;
        sd1neg?: boolean;
        sd1pos?: boolean;
        sd2neg?: boolean;
        sd2pos?: boolean;
        sd3neg?: boolean;
        sd3pos?: boolean;
        sd4neg?: boolean;
        sd4pos?: boolean;
        createdAt?: boolean;
        updatedAt?: boolean;
    },
    ExtArgs['result']['wHOGrowthStandard']
>;

export type WHOGrowthStandardSelectCreateManyAndReturn<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
    {
        id?: boolean;
        ageInMonths?: boolean;
        gender?: boolean;
        measurementType?: boolean;
        lValue?: boolean;
        mValue?: boolean;
        sValue?: boolean;
        sd0?: boolean;
        sd1neg?: boolean;
        sd1pos?: boolean;
        sd2neg?: boolean;
        sd2pos?: boolean;
        sd3neg?: boolean;
        sd3pos?: boolean;
        sd4neg?: boolean;
        sd4pos?: boolean;
        createdAt?: boolean;
        updatedAt?: boolean;
    },
    ExtArgs['result']['wHOGrowthStandard']
>;

export type WHOGrowthStandardSelectUpdateManyAndReturn<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetSelect<
    {
        id?: boolean;
        ageInMonths?: boolean;
        gender?: boolean;
        measurementType?: boolean;
        lValue?: boolean;
        mValue?: boolean;
        sValue?: boolean;
        sd0?: boolean;
        sd1neg?: boolean;
        sd1pos?: boolean;
        sd2neg?: boolean;
        sd2pos?: boolean;
        sd3neg?: boolean;
        sd3pos?: boolean;
        sd4neg?: boolean;
        sd4pos?: boolean;
        createdAt?: boolean;
        updatedAt?: boolean;
    },
    ExtArgs['result']['wHOGrowthStandard']
>;

export type WHOGrowthStandardSelectScalar = {
    id?: boolean;
    ageInMonths?: boolean;
    gender?: boolean;
    measurementType?: boolean;
    lValue?: boolean;
    mValue?: boolean;
    sValue?: boolean;
    sd0?: boolean;
    sd1neg?: boolean;
    sd1pos?: boolean;
    sd2neg?: boolean;
    sd2pos?: boolean;
    sd3neg?: boolean;
    sd3pos?: boolean;
    sd4neg?: boolean;
    sd4pos?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
};

export type WHOGrowthStandardOmit<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = runtime.Types.Extensions.GetOmit<
    | 'id'
    | 'ageInMonths'
    | 'gender'
    | 'measurementType'
    | 'lValue'
    | 'mValue'
    | 'sValue'
    | 'sd0'
    | 'sd1neg'
    | 'sd1pos'
    | 'sd2neg'
    | 'sd2pos'
    | 'sd3neg'
    | 'sd3pos'
    | 'sd4neg'
    | 'sd4pos'
    | 'createdAt'
    | 'updatedAt',
    ExtArgs['result']['wHOGrowthStandard']
>;

export type $WHOGrowthStandardPayload<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    name: 'WHOGrowthStandard';
    objects: {};
    scalars: runtime.Types.Extensions.GetPayloadResult<
        {
            id: number;
            ageInMonths: number;
            gender: $Enums.Gender;
            measurementType: $Enums.MeasurementType;
            lValue: number;
            mValue: number;
            sValue: number;
            sd0: number;
            sd1neg: number;
            sd1pos: number;
            sd2neg: number;
            sd2pos: number;
            sd3neg: number;
            sd3pos: number;
            sd4neg: number | null;
            sd4pos: number | null;
            createdAt: Date;
            updatedAt: Date;
        },
        ExtArgs['result']['wHOGrowthStandard']
    >;
    composites: {};
};

export type WHOGrowthStandardGetPayload<S extends boolean | null | undefined | WHOGrowthStandardDefaultArgs> =
    runtime.Types.Result.GetResult<Prisma.$WHOGrowthStandardPayload, S>;

export type WHOGrowthStandardCountArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = Omit<WHOGrowthStandardFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: WHOGrowthStandardCountAggregateInputType | true;
};

export interface WHOGrowthStandardDelegate<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
    GlobalOmitOptions = {}
> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WHOGrowthStandard']; meta: { name: 'WHOGrowthStandard' } };
    /**
     * Find zero or one WHOGrowthStandard that matches the filter.
     * @param {WHOGrowthStandardFindUniqueArgs} args - Arguments to find a WHOGrowthStandard
     * @example
     * // Get one WHOGrowthStandard
     * const wHOGrowthStandard = await prisma.wHOGrowthStandard.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WHOGrowthStandardFindUniqueArgs>(
        args: Prisma.SelectSubset<T, WHOGrowthStandardFindUniqueArgs<ExtArgs>>
    ): Prisma.Prisma__WHOGrowthStandardClient<
        runtime.Types.Result.GetResult<
            Prisma.$WHOGrowthStandardPayload<ExtArgs>,
            T,
            'findUnique',
            GlobalOmitOptions
        > | null,
        null,
        ExtArgs,
        GlobalOmitOptions
    >;

    /**
     * Find one WHOGrowthStandard that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {WHOGrowthStandardFindUniqueOrThrowArgs} args - Arguments to find a WHOGrowthStandard
     * @example
     * // Get one WHOGrowthStandard
     * const wHOGrowthStandard = await prisma.wHOGrowthStandard.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WHOGrowthStandardFindUniqueOrThrowArgs>(
        args: Prisma.SelectSubset<T, WHOGrowthStandardFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma.Prisma__WHOGrowthStandardClient<
        runtime.Types.Result.GetResult<
            Prisma.$WHOGrowthStandardPayload<ExtArgs>,
            T,
            'findUniqueOrThrow',
            GlobalOmitOptions
        >,
        never,
        ExtArgs,
        GlobalOmitOptions
    >;

    /**
     * Find the first WHOGrowthStandard that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WHOGrowthStandardFindFirstArgs} args - Arguments to find a WHOGrowthStandard
     * @example
     * // Get one WHOGrowthStandard
     * const wHOGrowthStandard = await prisma.wHOGrowthStandard.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WHOGrowthStandardFindFirstArgs>(
        args?: Prisma.SelectSubset<T, WHOGrowthStandardFindFirstArgs<ExtArgs>>
    ): Prisma.Prisma__WHOGrowthStandardClient<
        runtime.Types.Result.GetResult<
            Prisma.$WHOGrowthStandardPayload<ExtArgs>,
            T,
            'findFirst',
            GlobalOmitOptions
        > | null,
        null,
        ExtArgs,
        GlobalOmitOptions
    >;

    /**
     * Find the first WHOGrowthStandard that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WHOGrowthStandardFindFirstOrThrowArgs} args - Arguments to find a WHOGrowthStandard
     * @example
     * // Get one WHOGrowthStandard
     * const wHOGrowthStandard = await prisma.wHOGrowthStandard.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WHOGrowthStandardFindFirstOrThrowArgs>(
        args?: Prisma.SelectSubset<T, WHOGrowthStandardFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma.Prisma__WHOGrowthStandardClient<
        runtime.Types.Result.GetResult<
            Prisma.$WHOGrowthStandardPayload<ExtArgs>,
            T,
            'findFirstOrThrow',
            GlobalOmitOptions
        >,
        never,
        ExtArgs,
        GlobalOmitOptions
    >;

    /**
     * Find zero or more WHOGrowthStandards that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WHOGrowthStandardFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WHOGrowthStandards
     * const wHOGrowthStandards = await prisma.wHOGrowthStandard.findMany()
     *
     * // Get first 10 WHOGrowthStandards
     * const wHOGrowthStandards = await prisma.wHOGrowthStandard.findMany({ take: 10 })
     *
     * // Only select the `id`
     * const wHOGrowthStandardWithIdOnly = await prisma.wHOGrowthStandard.findMany({ select: { id: true } })
     *
     */
    findMany<T extends WHOGrowthStandardFindManyArgs>(
        args?: Prisma.SelectSubset<T, WHOGrowthStandardFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<
        runtime.Types.Result.GetResult<Prisma.$WHOGrowthStandardPayload<ExtArgs>, T, 'findMany', GlobalOmitOptions>
    >;

    /**
     * Create a WHOGrowthStandard.
     * @param {WHOGrowthStandardCreateArgs} args - Arguments to create a WHOGrowthStandard.
     * @example
     * // Create one WHOGrowthStandard
     * const WHOGrowthStandard = await prisma.wHOGrowthStandard.create({
     *   data: {
     *     // ... data to create a WHOGrowthStandard
     *   }
     * })
     *
     */
    create<T extends WHOGrowthStandardCreateArgs>(
        args: Prisma.SelectSubset<T, WHOGrowthStandardCreateArgs<ExtArgs>>
    ): Prisma.Prisma__WHOGrowthStandardClient<
        runtime.Types.Result.GetResult<Prisma.$WHOGrowthStandardPayload<ExtArgs>, T, 'create', GlobalOmitOptions>,
        never,
        ExtArgs,
        GlobalOmitOptions
    >;

    /**
     * Create many WHOGrowthStandards.
     * @param {WHOGrowthStandardCreateManyArgs} args - Arguments to create many WHOGrowthStandards.
     * @example
     * // Create many WHOGrowthStandards
     * const wHOGrowthStandard = await prisma.wHOGrowthStandard.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *
     */
    createMany<T extends WHOGrowthStandardCreateManyArgs>(
        args?: Prisma.SelectSubset<T, WHOGrowthStandardCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<Prisma.BatchPayload>;

    /**
     * Create many WHOGrowthStandards and returns the data saved in the database.
     * @param {WHOGrowthStandardCreateManyAndReturnArgs} args - Arguments to create many WHOGrowthStandards.
     * @example
     * // Create many WHOGrowthStandards
     * const wHOGrowthStandard = await prisma.wHOGrowthStandard.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *
     * // Create many WHOGrowthStandards and only return the `id`
     * const wHOGrowthStandardWithIdOnly = await prisma.wHOGrowthStandard.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     *
     */
    createManyAndReturn<T extends WHOGrowthStandardCreateManyAndReturnArgs>(
        args?: Prisma.SelectSubset<T, WHOGrowthStandardCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<
        runtime.Types.Result.GetResult<
            Prisma.$WHOGrowthStandardPayload<ExtArgs>,
            T,
            'createManyAndReturn',
            GlobalOmitOptions
        >
    >;

    /**
     * Delete a WHOGrowthStandard.
     * @param {WHOGrowthStandardDeleteArgs} args - Arguments to delete one WHOGrowthStandard.
     * @example
     * // Delete one WHOGrowthStandard
     * const WHOGrowthStandard = await prisma.wHOGrowthStandard.delete({
     *   where: {
     *     // ... filter to delete one WHOGrowthStandard
     *   }
     * })
     *
     */
    delete<T extends WHOGrowthStandardDeleteArgs>(
        args: Prisma.SelectSubset<T, WHOGrowthStandardDeleteArgs<ExtArgs>>
    ): Prisma.Prisma__WHOGrowthStandardClient<
        runtime.Types.Result.GetResult<Prisma.$WHOGrowthStandardPayload<ExtArgs>, T, 'delete', GlobalOmitOptions>,
        never,
        ExtArgs,
        GlobalOmitOptions
    >;

    /**
     * Update one WHOGrowthStandard.
     * @param {WHOGrowthStandardUpdateArgs} args - Arguments to update one WHOGrowthStandard.
     * @example
     * // Update one WHOGrowthStandard
     * const wHOGrowthStandard = await prisma.wHOGrowthStandard.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     *
     */
    update<T extends WHOGrowthStandardUpdateArgs>(
        args: Prisma.SelectSubset<T, WHOGrowthStandardUpdateArgs<ExtArgs>>
    ): Prisma.Prisma__WHOGrowthStandardClient<
        runtime.Types.Result.GetResult<Prisma.$WHOGrowthStandardPayload<ExtArgs>, T, 'update', GlobalOmitOptions>,
        never,
        ExtArgs,
        GlobalOmitOptions
    >;

    /**
     * Delete zero or more WHOGrowthStandards.
     * @param {WHOGrowthStandardDeleteManyArgs} args - Arguments to filter WHOGrowthStandards to delete.
     * @example
     * // Delete a few WHOGrowthStandards
     * const { count } = await prisma.wHOGrowthStandard.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     *
     */
    deleteMany<T extends WHOGrowthStandardDeleteManyArgs>(
        args?: Prisma.SelectSubset<T, WHOGrowthStandardDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<Prisma.BatchPayload>;

    /**
     * Update zero or more WHOGrowthStandards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WHOGrowthStandardUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WHOGrowthStandards
     * const wHOGrowthStandard = await prisma.wHOGrowthStandard.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     *
     */
    updateMany<T extends WHOGrowthStandardUpdateManyArgs>(
        args: Prisma.SelectSubset<T, WHOGrowthStandardUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<Prisma.BatchPayload>;

    /**
     * Update zero or more WHOGrowthStandards and returns the data updated in the database.
     * @param {WHOGrowthStandardUpdateManyAndReturnArgs} args - Arguments to update many WHOGrowthStandards.
     * @example
     * // Update many WHOGrowthStandards
     * const wHOGrowthStandard = await prisma.wHOGrowthStandard.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *
     * // Update zero or more WHOGrowthStandards and only return the `id`
     * const wHOGrowthStandardWithIdOnly = await prisma.wHOGrowthStandard.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     *
     */
    updateManyAndReturn<T extends WHOGrowthStandardUpdateManyAndReturnArgs>(
        args: Prisma.SelectSubset<T, WHOGrowthStandardUpdateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<
        runtime.Types.Result.GetResult<
            Prisma.$WHOGrowthStandardPayload<ExtArgs>,
            T,
            'updateManyAndReturn',
            GlobalOmitOptions
        >
    >;

    /**
     * Create or update one WHOGrowthStandard.
     * @param {WHOGrowthStandardUpsertArgs} args - Arguments to update or create a WHOGrowthStandard.
     * @example
     * // Update or create a WHOGrowthStandard
     * const wHOGrowthStandard = await prisma.wHOGrowthStandard.upsert({
     *   create: {
     *     // ... data to create a WHOGrowthStandard
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WHOGrowthStandard we want to update
     *   }
     * })
     */
    upsert<T extends WHOGrowthStandardUpsertArgs>(
        args: Prisma.SelectSubset<T, WHOGrowthStandardUpsertArgs<ExtArgs>>
    ): Prisma.Prisma__WHOGrowthStandardClient<
        runtime.Types.Result.GetResult<Prisma.$WHOGrowthStandardPayload<ExtArgs>, T, 'upsert', GlobalOmitOptions>,
        never,
        ExtArgs,
        GlobalOmitOptions
    >;

    /**
     * Count the number of WHOGrowthStandards.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WHOGrowthStandardCountArgs} args - Arguments to filter WHOGrowthStandards to count.
     * @example
     * // Count the number of WHOGrowthStandards
     * const count = await prisma.wHOGrowthStandard.count({
     *   where: {
     *     // ... the filter for the WHOGrowthStandards we want to count
     *   }
     * })
     **/
    count<T extends WHOGrowthStandardCountArgs>(
        args?: Prisma.Subset<T, WHOGrowthStandardCountArgs>
    ): Prisma.PrismaPromise<
        T extends runtime.Types.Utils.Record<'select', any>
            ? T['select'] extends true
                ? number
                : Prisma.GetScalarType<T['select'], WHOGrowthStandardCountAggregateOutputType>
            : number
    >;

    /**
     * Allows you to perform aggregations operations on a WHOGrowthStandard.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WHOGrowthStandardAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
     **/
    aggregate<T extends WHOGrowthStandardAggregateArgs>(
        args: Prisma.Subset<T, WHOGrowthStandardAggregateArgs>
    ): Prisma.PrismaPromise<GetWHOGrowthStandardAggregateType<T>>;

    /**
     * Group by WHOGrowthStandard.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WHOGrowthStandardGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     *
     **/
    groupBy<
        T extends WHOGrowthStandardGroupByArgs,
        HasSelectOrTake extends Prisma.Or<
            Prisma.Extends<'skip', Prisma.Keys<T>>,
            Prisma.Extends<'take', Prisma.Keys<T>>
        >,
        OrderByArg extends Prisma.True extends HasSelectOrTake
            ? { orderBy: WHOGrowthStandardGroupByArgs['orderBy'] }
            : { orderBy?: WHOGrowthStandardGroupByArgs['orderBy'] },
        OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
        ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
        ByValid extends Prisma.Has<ByFields, OrderFields>,
        HavingFields extends Prisma.GetHavingFields<T['having']>,
        HavingValid extends Prisma.Has<ByFields, HavingFields>,
        ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
        InputErrors extends ByEmpty extends Prisma.True
            ? `Error: "by" must not be empty.`
            : HavingValid extends Prisma.False
              ? {
                    [P in HavingFields]: P extends ByFields
                        ? never
                        : P extends string
                          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                          : [Error, 'Field ', P, ` in "having" needs to be provided in "by"`];
                }[HavingFields]
              : 'take' extends Prisma.Keys<T>
                ? 'orderBy' extends Prisma.Keys<T>
                    ? ByValid extends Prisma.True
                        ? {}
                        : {
                              [P in OrderFields]: P extends ByFields
                                  ? never
                                  : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                          }[OrderFields]
                    : 'Error: If you provide "take", you also need to provide "orderBy"'
                : 'skip' extends Prisma.Keys<T>
                  ? 'orderBy' extends Prisma.Keys<T>
                      ? ByValid extends Prisma.True
                          ? {}
                          : {
                                [P in OrderFields]: P extends ByFields
                                    ? never
                                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                            }[OrderFields]
                      : 'Error: If you provide "skip", you also need to provide "orderBy"'
                  : ByValid extends Prisma.True
                    ? {}
                    : {
                          [P in OrderFields]: P extends ByFields
                              ? never
                              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                      }[OrderFields]
    >(
        args: Prisma.SubsetIntersection<T, WHOGrowthStandardGroupByArgs, OrderByArg> & InputErrors
    ): {} extends InputErrors ? GetWHOGrowthStandardGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>;
    /**
     * Fields of the WHOGrowthStandard model
     */
    readonly fields: WHOGrowthStandardFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WHOGrowthStandard.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WHOGrowthStandardClient<
    T,
    Null = never,
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
    GlobalOmitOptions = {}
> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(
        onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
        onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
    ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(
        onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
    ): runtime.Types.Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the WHOGrowthStandard model
 */
export interface WHOGrowthStandardFieldRefs {
    readonly id: Prisma.FieldRef<'WHOGrowthStandard', 'Int'>;
    readonly ageInMonths: Prisma.FieldRef<'WHOGrowthStandard', 'Int'>;
    readonly gender: Prisma.FieldRef<'WHOGrowthStandard', 'Gender'>;
    readonly measurementType: Prisma.FieldRef<'WHOGrowthStandard', 'MeasurementType'>;
    readonly lValue: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly mValue: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly sValue: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly sd0: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly sd1neg: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly sd1pos: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly sd2neg: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly sd2pos: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly sd3neg: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly sd3pos: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly sd4neg: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly sd4pos: Prisma.FieldRef<'WHOGrowthStandard', 'Float'>;
    readonly createdAt: Prisma.FieldRef<'WHOGrowthStandard', 'DateTime'>;
    readonly updatedAt: Prisma.FieldRef<'WHOGrowthStandard', 'DateTime'>;
}

// Custom InputTypes
/**
 * WHOGrowthStandard findUnique
 */
export type WHOGrowthStandardFindUniqueArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelect<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * Filter, which WHOGrowthStandard to fetch.
     */
    where: Prisma.WHOGrowthStandardWhereUniqueInput;
};

/**
 * WHOGrowthStandard findUniqueOrThrow
 */
export type WHOGrowthStandardFindUniqueOrThrowArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelect<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * Filter, which WHOGrowthStandard to fetch.
     */
    where: Prisma.WHOGrowthStandardWhereUniqueInput;
};

/**
 * WHOGrowthStandard findFirst
 */
export type WHOGrowthStandardFindFirstArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelect<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * Filter, which WHOGrowthStandard to fetch.
     */
    where?: Prisma.WHOGrowthStandardWhereInput;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     *
     * Determine the order of WHOGrowthStandards to fetch.
     */
    orderBy?: Prisma.WHOGrowthStandardOrderByWithRelationInput | Prisma.WHOGrowthStandardOrderByWithRelationInput[];
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     *
     * Sets the position for searching for WHOGrowthStandards.
     */
    cursor?: Prisma.WHOGrowthStandardWhereUniqueInput;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     *
     * Take `Â±n` WHOGrowthStandards from the position of the cursor.
     */
    take?: number;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     *
     * Skip the first `n` WHOGrowthStandards.
     */
    skip?: number;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     *
     * Filter by unique combinations of WHOGrowthStandards.
     */
    distinct?: Prisma.WHOGrowthStandardScalarFieldEnum | Prisma.WHOGrowthStandardScalarFieldEnum[];
};

/**
 * WHOGrowthStandard findFirstOrThrow
 */
export type WHOGrowthStandardFindFirstOrThrowArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelect<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * Filter, which WHOGrowthStandard to fetch.
     */
    where?: Prisma.WHOGrowthStandardWhereInput;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     *
     * Determine the order of WHOGrowthStandards to fetch.
     */
    orderBy?: Prisma.WHOGrowthStandardOrderByWithRelationInput | Prisma.WHOGrowthStandardOrderByWithRelationInput[];
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     *
     * Sets the position for searching for WHOGrowthStandards.
     */
    cursor?: Prisma.WHOGrowthStandardWhereUniqueInput;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     *
     * Take `Â±n` WHOGrowthStandards from the position of the cursor.
     */
    take?: number;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     *
     * Skip the first `n` WHOGrowthStandards.
     */
    skip?: number;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     *
     * Filter by unique combinations of WHOGrowthStandards.
     */
    distinct?: Prisma.WHOGrowthStandardScalarFieldEnum | Prisma.WHOGrowthStandardScalarFieldEnum[];
};

/**
 * WHOGrowthStandard findMany
 */
export type WHOGrowthStandardFindManyArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelect<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * Filter, which WHOGrowthStandards to fetch.
     */
    where?: Prisma.WHOGrowthStandardWhereInput;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     *
     * Determine the order of WHOGrowthStandards to fetch.
     */
    orderBy?: Prisma.WHOGrowthStandardOrderByWithRelationInput | Prisma.WHOGrowthStandardOrderByWithRelationInput[];
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     *
     * Sets the position for listing WHOGrowthStandards.
     */
    cursor?: Prisma.WHOGrowthStandardWhereUniqueInput;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     *
     * Take `Â±n` WHOGrowthStandards from the position of the cursor.
     */
    take?: number;
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     *
     * Skip the first `n` WHOGrowthStandards.
     */
    skip?: number;
    distinct?: Prisma.WHOGrowthStandardScalarFieldEnum | Prisma.WHOGrowthStandardScalarFieldEnum[];
};

/**
 * WHOGrowthStandard create
 */
export type WHOGrowthStandardCreateArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelect<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * The data needed to create a WHOGrowthStandard.
     */
    data: Prisma.XOR<Prisma.WHOGrowthStandardCreateInput, Prisma.WHOGrowthStandardUncheckedCreateInput>;
};

/**
 * WHOGrowthStandard createMany
 */
export type WHOGrowthStandardCreateManyArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * The data used to create many WHOGrowthStandards.
     */
    data: Prisma.WHOGrowthStandardCreateManyInput | Prisma.WHOGrowthStandardCreateManyInput[];
    skipDuplicates?: boolean;
};

/**
 * WHOGrowthStandard createManyAndReturn
 */
export type WHOGrowthStandardCreateManyAndReturnArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelectCreateManyAndReturn<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * The data used to create many WHOGrowthStandards.
     */
    data: Prisma.WHOGrowthStandardCreateManyInput | Prisma.WHOGrowthStandardCreateManyInput[];
    skipDuplicates?: boolean;
};

/**
 * WHOGrowthStandard update
 */
export type WHOGrowthStandardUpdateArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelect<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * The data needed to update a WHOGrowthStandard.
     */
    data: Prisma.XOR<Prisma.WHOGrowthStandardUpdateInput, Prisma.WHOGrowthStandardUncheckedUpdateInput>;
    /**
     * Choose, which WHOGrowthStandard to update.
     */
    where: Prisma.WHOGrowthStandardWhereUniqueInput;
};

/**
 * WHOGrowthStandard updateMany
 */
export type WHOGrowthStandardUpdateManyArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * The data used to update WHOGrowthStandards.
     */
    data: Prisma.XOR<Prisma.WHOGrowthStandardUpdateManyMutationInput, Prisma.WHOGrowthStandardUncheckedUpdateManyInput>;
    /**
     * Filter which WHOGrowthStandards to update
     */
    where?: Prisma.WHOGrowthStandardWhereInput;
    /**
     * Limit how many WHOGrowthStandards to update.
     */
    limit?: number;
};

/**
 * WHOGrowthStandard updateManyAndReturn
 */
export type WHOGrowthStandardUpdateManyAndReturnArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelectUpdateManyAndReturn<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * The data used to update WHOGrowthStandards.
     */
    data: Prisma.XOR<Prisma.WHOGrowthStandardUpdateManyMutationInput, Prisma.WHOGrowthStandardUncheckedUpdateManyInput>;
    /**
     * Filter which WHOGrowthStandards to update
     */
    where?: Prisma.WHOGrowthStandardWhereInput;
    /**
     * Limit how many WHOGrowthStandards to update.
     */
    limit?: number;
};

/**
 * WHOGrowthStandard upsert
 */
export type WHOGrowthStandardUpsertArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelect<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * The filter to search for the WHOGrowthStandard to update in case it exists.
     */
    where: Prisma.WHOGrowthStandardWhereUniqueInput;
    /**
     * In case the WHOGrowthStandard found by the `where` argument doesn't exist, create a new WHOGrowthStandard with this data.
     */
    create: Prisma.XOR<Prisma.WHOGrowthStandardCreateInput, Prisma.WHOGrowthStandardUncheckedCreateInput>;
    /**
     * In case the WHOGrowthStandard was found with the provided `where` argument, update it with this data.
     */
    update: Prisma.XOR<Prisma.WHOGrowthStandardUpdateInput, Prisma.WHOGrowthStandardUncheckedUpdateInput>;
};

/**
 * WHOGrowthStandard delete
 */
export type WHOGrowthStandardDeleteArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelect<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
    /**
     * Filter which WHOGrowthStandard to delete.
     */
    where: Prisma.WHOGrowthStandardWhereUniqueInput;
};

/**
 * WHOGrowthStandard deleteMany
 */
export type WHOGrowthStandardDeleteManyArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Filter which WHOGrowthStandards to delete
     */
    where?: Prisma.WHOGrowthStandardWhereInput;
    /**
     * Limit how many WHOGrowthStandards to delete.
     */
    limit?: number;
};

/**
 * WHOGrowthStandard without action
 */
export type WHOGrowthStandardDefaultArgs<
    ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs
> = {
    /**
     * Select specific fields to fetch from the WHOGrowthStandard
     */
    select?: Prisma.WHOGrowthStandardSelect<ExtArgs> | null;
    /**
     * Omit specific fields from the WHOGrowthStandard
     */
    omit?: Prisma.WHOGrowthStandardOmit<ExtArgs> | null;
};
